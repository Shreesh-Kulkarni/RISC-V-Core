// Generated by SandPiper(TM) 1.14-2022/10/10-beta-Pro from Redwood EDA, LLC.
// (Installed here: /usr/local/mono/sandpiper/distro.)
// Redwood EDA, LLC does not claim intellectual property rights to this file and provides no warranty regarding its correctness or quality.


// For silencing unused signal messages.
`define BOGUS_USE(ignore)





//
// Signals declared top-level.
//

// For $diff.
logic [31:0] L0_diff_a0;

// For $out.
logic [31:0] L0_out_a0;

// For $prod.
logic [31:0] L0_prod_a0;

// For $quot.
logic [31:0] L0_quot_a0;

// For $r_rand1.
logic [31:0] L0_r_rand1_n1,
             L0_r_rand1_a0;

// For $r_rand2.
logic [31:0] L0_r_rand2_n1,
             L0_r_rand2_a0;

// For $r_sel.
logic [31:0] L0_r_sel_n1,
             L0_r_sel_a0;

// For $rand1.
logic [3:0] L0_rand1_a0;

// For $rand2.
logic [3:0] L0_rand2_a0;

// For $reset.
logic L0_reset_a0;

// For $sel.
logic [1:0] L0_sel_a0;

// For $sum.
logic [31:0] L0_sum_a0;

// For $val1.
logic [31:0] L0_val1_a0;

// For $val2.
logic [31:0] L0_val2_a0;



   // Staging of random value for missing assignment.
   assign L0_r_rand1_n1[31:0] = $random() ^ {31'b0, clk};
   always_ff @(posedge clk) L0_r_rand1_a0[31:0] <= L0_r_rand1_n1[31:0];

   // Staging of random value for missing assignment.
   assign L0_r_rand2_n1[31:0] = $random() ^ {31'b0, clk};
   always_ff @(posedge clk) L0_r_rand2_a0[31:0] <= L0_r_rand2_n1[31:0];

   // Staging of random value for missing assignment.
   assign L0_r_sel_n1[31:0] = $random() ^ {31'b0, clk};
   always_ff @(posedge clk) L0_r_sel_a0[31:0] <= L0_r_sel_n1[31:0];

   // Staging of signal $rand1, which had no assignment.
   // Assign to a random value.
   // verilator lint_save
   // verilator lint_off WIDTH
   assign L0_rand1_a0[3:0] = L0_r_rand1_a0;
   // verilator lint_restore

   // Staging of signal $rand2, which had no assignment.
   // Assign to a random value.
   // verilator lint_save
   // verilator lint_off WIDTH
   assign L0_rand2_a0[3:0] = L0_r_rand2_a0;
   // verilator lint_restore

   // Staging of signal $sel, which had no assignment.
   // Assign to a random value.
   // verilator lint_save
   // verilator lint_off WIDTH
   assign L0_sel_a0[1:0] = L0_r_sel_a0;
   // verilator lint_restore





//
// Debug Signals
//

   if (1) begin : DEBUG_SIGS

      logic [31:0] \@0$diff ;
      assign \@0$diff = L0_diff_a0;
      logic [31:0] \@0$out ;
      assign \@0$out = L0_out_a0;
      logic [31:0] \@0$prod ;
      assign \@0$prod = L0_prod_a0;
      logic [31:0] \@0$quot ;
      assign \@0$quot = L0_quot_a0;
      logic [3:0] \@0$rand1 ;
      assign \@0$rand1 = L0_rand1_a0;
      logic [3:0] \@0$rand2 ;
      assign \@0$rand2 = L0_rand2_a0;
      logic  \@0$reset ;
      assign \@0$reset = L0_reset_a0;
      logic [1:0] \@0$sel ;
      assign \@0$sel = L0_sel_a0;
      logic [31:0] \@0$sum ;
      assign \@0$sum = L0_sum_a0;
      logic [31:0] \@0$val1 ;
      assign \@0$val1 = L0_val1_a0;
      logic [31:0] \@0$val2 ;
      assign \@0$val2 = L0_val2_a0;


   end

